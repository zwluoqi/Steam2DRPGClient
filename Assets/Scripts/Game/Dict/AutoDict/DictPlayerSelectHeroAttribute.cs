//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using Xor;

public partial class DictPlayerSelectHeroAttribute
{

    // data model
    // [System.Serializable]
    public class Model
    {
     /// <summary>
        /// 英雄id
        /// </summary>
        public XorInt id_xor;
     /// <summary>
        /// 英雄id
        /// </summary>
        public int id{
            get{
                return id_xor.val;
            }
        }
     /// <summary>
        /// 名字
        /// </summary>
        public string name;
     /// <summary>
        /// 团队定位
        /// </summary>
        public string teamstand;
     /// <summary>
        /// 攻击
        /// </summary>
        public XorDouble attack_xor;
     /// <summary>
        /// 攻击
        /// </summary>
        public double attack{
            get{
                return attack_xor.val;
            }
        }
     /// <summary>
        /// 攻击成长
        /// </summary>
        public XorDouble attack_lev_xor;
     /// <summary>
        /// 攻击成长
        /// </summary>
        public double attack_lev{
            get{
                return attack_lev_xor.val;
            }
        }
     /// <summary>
        /// 防御
        /// </summary>
        public XorDouble defence_xor;
     /// <summary>
        /// 防御
        /// </summary>
        public double defence{
            get{
                return defence_xor.val;
            }
        }
     /// <summary>
        /// 防御成长
        /// </summary>
        public XorDouble defence_lev_xor;
     /// <summary>
        /// 防御成长
        /// </summary>
        public double defence_lev{
            get{
                return defence_lev_xor.val;
            }
        }
     /// <summary>
        /// 血量
        /// </summary>
        public XorDouble hp_xor;
     /// <summary>
        /// 血量
        /// </summary>
        public double hp{
            get{
                return hp_xor.val;
            }
        }
     /// <summary>
        /// 血量成长
        /// </summary>
        public XorDouble hp_lev_xor;
     /// <summary>
        /// 血量成长
        /// </summary>
        public double hp_lev{
            get{
                return hp_lev_xor.val;
            }
        }
     /// <summary>
        /// 魔法
        /// </summary>
        public XorDouble mp_xor;
     /// <summary>
        /// 魔法
        /// </summary>
        public double mp{
            get{
                return mp_xor.val;
            }
        }
     /// <summary>
        /// 魔法成长
        /// </summary>
        public XorDouble mp_lev_xor;
     /// <summary>
        /// 魔法成长
        /// </summary>
        public double mp_lev{
            get{
                return mp_lev_xor.val;
            }
        }
     /// <summary>
        /// 筋骨
        /// </summary>
        public XorDouble jingu_xor;
     /// <summary>
        /// 筋骨
        /// </summary>
        public double jingu{
            get{
                return jingu_xor.val;
            }
        }
     /// <summary>
        /// 筋骨成长
        /// </summary>
        public XorDouble jingu_lev_xor;
     /// <summary>
        /// 筋骨成长
        /// </summary>
        public double jingu_lev{
            get{
                return jingu_lev_xor.val;
            }
        }
     /// <summary>
        /// 身法
        /// </summary>
        public XorDouble shenfa_xor;
     /// <summary>
        /// 身法
        /// </summary>
        public double shenfa{
            get{
                return shenfa_xor.val;
            }
        }
     /// <summary>
        /// 身法成长
        /// </summary>
        public XorDouble shenfa_lev_xor;
     /// <summary>
        /// 身法成长
        /// </summary>
        public double shenfa_lev{
            get{
                return shenfa_lev_xor.val;
            }
        }
     /// <summary>
        /// 内力
        /// </summary>
        public XorDouble neili_xor;
     /// <summary>
        /// 内力
        /// </summary>
        public double neili{
            get{
                return neili_xor.val;
            }
        }
     /// <summary>
        /// 内里成长
        /// </summary>
        public XorDouble neili_lev_xor;
     /// <summary>
        /// 内里成长
        /// </summary>
        public double neili_lev{
            get{
                return neili_lev_xor.val;
            }
        }
     /// <summary>
        /// 团队技能
        /// </summary>
        public List<string> tuandui_skills;

    public virtual Model Clone()
    {
        Model mm = this.MemberwiseClone() as Model;
        return mm;
    }
}

    //
    private Dictionary<int, Model> m_dict;

    // Get The Dictionary
    public Dictionary<int, Model> Dict
    {
        get
        {
            return m_dict;
        }
    }

    private List<Model> m_list;
	public List<Model> getList()
	{
		return m_list;
	}

    // Get The Model By Key
    public Model GetModel(int id)
    {
        if (m_dict == null)
        {
            Debug.LogError("DictPlayerSelectHeroAttribute m_dict Is Null");
            return null;
        }
        else
        {
            if (m_dict.ContainsKey(id))
            {
                return m_dict[id];
            }
            else
            {
                Debug.LogError ("error id:"+id);
                return null;
            }
        }
    }

    private DictString_LoadFinishedCallBack m_loadFinishedCallBack;
    // load the json file
    public void Load(string path,DictString_LoadFinishedCallBack callBack)
    {
        m_loadFinishedCallBack = callBack;

        //
        string filePath = path;
        if(!filePath.EndsWith("/"))
        {
            filePath += "/";
        }

        filePath += GetFileName();
        DictFileReader fileReader = new DictFileReader(filePath, DoParse);
    }

    // get file name
    public string GetFileName()
    {
        return "dict_player_select_hero_attribute.txt";
    }

    // parse the json data
    private void DoParse(DictFileReader fileReader)
    {
        m_dict = new Dictionary<int,Model>();
        m_list = new List<Model>();
        //
        do
        {
            string[] str = fileReader.ReadRow();
            if (str == null || str.Length == 0)
            {
                break;
            }

            //
            Model model = new Model();
            model.id_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["id"]]),fileReader.randomUtil);
            model.name = DictTypeConvert.ParseString(str[fileReader.typeName2Index["name"]]);
            model.teamstand = DictTypeConvert.ParseString(str[fileReader.typeName2Index["teamstand"]]);
            model.attack_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["attack"]]),fileReader.randomUtil);
            model.attack_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["attack_lev"]]),fileReader.randomUtil);
            model.defence_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["defence"]]),fileReader.randomUtil);
            model.defence_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["defence_lev"]]),fileReader.randomUtil);
            model.hp_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["hp"]]),fileReader.randomUtil);
            model.hp_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["hp_lev"]]),fileReader.randomUtil);
            model.mp_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["mp"]]),fileReader.randomUtil);
            model.mp_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["mp_lev"]]),fileReader.randomUtil);
            model.jingu_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["jingu"]]),fileReader.randomUtil);
            model.jingu_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["jingu_lev"]]),fileReader.randomUtil);
            model.shenfa_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["shenfa"]]),fileReader.randomUtil);
            model.shenfa_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["shenfa_lev"]]),fileReader.randomUtil);
            model.neili_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["neili"]]),fileReader.randomUtil);
            model.neili_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["neili_lev"]]),fileReader.randomUtil);
            model.tuandui_skills = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["tuandui_skills"]]);

            if (m_dict.ContainsKey(model.id) == false)
            {
                m_dict.Add(model.id, model);
                m_list.Add(model);
            }
            else
            {
                Debug.LogError("DictPlayerSelectHeroAttribute Parse:Same Key = " + model.id);
            }

        } while (true);

        if(m_loadFinishedCallBack != null)
        {
            m_loadFinishedCallBack(GetFileName());
        }
    }

}
