//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using Xor;

public partial class DictChapterCopy
{

    // data model
    // [System.Serializable]
    public class Model
    {
     /// <summary>
        /// 副本id
        /// </summary>
        public string id;
     /// <summary>
        /// 章节id
        /// </summary>
        public string chapter_id;
     /// <summary>
        /// 副本名称
        /// </summary>
        public string name;
     /// <summary>
        /// 顺序
        /// </summary>
        public XorInt order_xor;
     /// <summary>
        /// 顺序
        /// </summary>
        public int order{
            get{
                return order_xor.val;
            }
        }
     /// <summary>
        /// 副本描述掉落
        /// </summary>
        public string drop;
     /// <summary>
        /// 普通敌人
        /// </summary>
        public List<string> enemy_id;
     /// <summary>
        /// 经验
        /// </summary>
        public XorInt exp_xor;
     /// <summary>
        /// 经验
        /// </summary>
        public int exp{
            get{
                return exp_xor.val;
            }
        }
     /// <summary>
        /// 英雄经验
        /// </summary>
        public XorInt hero_exp_xor;
     /// <summary>
        /// 英雄经验
        /// </summary>
        public int hero_exp{
            get{
                return hero_exp_xor.val;
            }
        }
     /// <summary>
        /// 掉落金币
        /// </summary>
        public XorInt coin_xor;
     /// <summary>
        /// 掉落金币
        /// </summary>
        public int coin{
            get{
                return coin_xor.val;
            }
        }
     /// <summary>
        /// 掉落钻石
        /// </summary>
        public XorInt ruby_xor;
     /// <summary>
        /// 掉落钻石
        /// </summary>
        public int ruby{
            get{
                return ruby_xor.val;
            }
        }
     /// <summary>
        /// 掉落红尘val
        /// </summary>
        public XorInt girl_val_xor;
     /// <summary>
        /// 掉落红尘val
        /// </summary>
        public int girl_val{
            get{
                return girl_val_xor.val;
            }
        }
     /// <summary>
        /// 必掉rewards
        /// </summary>
        public List<string> rewards;
     /// <summary>
        /// 首次掉落
        /// </summary>
        public List<string> first_rewards;
     /// <summary>
        /// 挂机掉落组
        /// </summary>
        public string guaji_rewards;
     /// <summary>
        /// 挂机掉落组
        /// </summary>
        public List<string> guaji_rewardlist;
     /// <summary>
        /// 副本背景图
        /// </summary>
        public string back_ground;
     /// <summary>
        /// 扫荡花费灵石
        /// </summary>
        public XorInt cost_ruby_xor;
     /// <summary>
        /// 扫荡花费灵石
        /// </summary>
        public int cost_ruby{
            get{
                return cost_ruby_xor.val;
            }
        }
     /// <summary>
        /// 副本ICON
        /// </summary>
        public string copy_icon;
     /// <summary>
        /// 机缘门派checkId
        /// </summary>
        public XorInt check_menpai_data_xor;
     /// <summary>
        /// 机缘门派checkId
        /// </summary>
        public int check_menpai_data{
            get{
                return check_menpai_data_xor.val;
            }
        }
     /// <summary>
        /// 英雄奖励队列
        /// </summary>
        public List<string> add_reward_heros;
     /// <summary>
        /// 信赖增加几率
        /// </summary>
        public XorDouble xinlai_add_radio_xor;
     /// <summary>
        /// 信赖增加几率
        /// </summary>
        public double xinlai_add_radio{
            get{
                return xinlai_add_radio_xor.val;
            }
        }

    public virtual Model Clone()
    {
        Model mm = this.MemberwiseClone() as Model;
        return mm;
    }
}

    //
    private Dictionary<string, Model> m_dict;

    // Get The Dictionary
    public Dictionary<string, Model> Dict
    {
        get
        {
            return m_dict;
        }
    }

    private List<Model> m_list;
	public List<Model> getList()
	{
		return m_list;
	}

    // Get The Model By Key
    public Model GetModel(string id)
    {
        if (m_dict == null)
        {
            Debug.LogError("DictChapterCopy m_dict Is Null");
            return null;
        }
        else
        {
            if (m_dict.ContainsKey(id))
            {
                return m_dict[id];
            }
            else
            {
                Debug.LogError ("error id:"+id);
                return null;
            }
        }
    }

    private DictString_LoadFinishedCallBack m_loadFinishedCallBack;
    // load the json file
    public void Load(string path,DictString_LoadFinishedCallBack callBack)
    {
        m_loadFinishedCallBack = callBack;

        //
        string filePath = path;
        if(!filePath.EndsWith("/"))
        {
            filePath += "/";
        }

        filePath += GetFileName();
        DictFileReader fileReader = new DictFileReader(filePath, DoParse);
    }

    // get file name
    public string GetFileName()
    {
        return "dict_chapter_copy.txt";
    }

    // parse the json data
    private void DoParse(DictFileReader fileReader)
    {
        m_dict = new Dictionary<string,Model>();
        m_list = new List<Model>();
        //
        do
        {
            string[] str = fileReader.ReadRow();
            if (str == null || str.Length == 0)
            {
                break;
            }

            //
            Model model = new Model();
            model.id = DictTypeConvert.ParseString(str[fileReader.typeName2Index["id"]]);
            model.chapter_id = DictTypeConvert.ParseString(str[fileReader.typeName2Index["chapter_id"]]);
            model.name = DictTypeConvert.ParseString(str[fileReader.typeName2Index["name"]]);
            model.order_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["order"]]),fileReader.randomUtil);
            model.drop = DictTypeConvert.ParseString(str[fileReader.typeName2Index["drop"]]);
            model.enemy_id = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["enemy_id"]]);
            model.exp_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["exp"]]),fileReader.randomUtil);
            model.hero_exp_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["hero_exp"]]),fileReader.randomUtil);
            model.coin_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["coin"]]),fileReader.randomUtil);
            model.ruby_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["ruby"]]),fileReader.randomUtil);
            model.girl_val_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["girl_val"]]),fileReader.randomUtil);
            model.rewards = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["rewards"]]);
            model.first_rewards = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["first_rewards"]]);
            model.guaji_rewards = DictTypeConvert.ParseString(str[fileReader.typeName2Index["guaji_rewards"]]);
            model.guaji_rewardlist = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["guaji_rewardlist"]]);
            model.back_ground = DictTypeConvert.ParseString(str[fileReader.typeName2Index["back_ground"]]);
            model.cost_ruby_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["cost_ruby"]]),fileReader.randomUtil);
            model.copy_icon = DictTypeConvert.ParseString(str[fileReader.typeName2Index["copy_icon"]]);
            model.check_menpai_data_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["check_menpai_data"]]),fileReader.randomUtil);
            model.add_reward_heros = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["add_reward_heros"]]);
            model.xinlai_add_radio_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["xinlai_add_radio"]]),fileReader.randomUtil);

            if (m_dict.ContainsKey(model.id) == false)
            {
                m_dict.Add(model.id, model);
                m_list.Add(model);
            }
            else
            {
                Debug.LogError("DictChapterCopy Parse:Same Key = " + model.id);
            }

        } while (true);

        if(m_loadFinishedCallBack != null)
        {
            m_loadFinishedCallBack(GetFileName());
        }
    }

}
