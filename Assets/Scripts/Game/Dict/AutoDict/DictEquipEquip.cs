//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using Xor;

public partial class DictEquipEquip
{

    // data model
    // [System.Serializable]
    public class Model
    {
     /// <summary>
        /// 装备ID
        /// </summary>
        public string id;
     /// <summary>
        /// 物品名称
        /// </summary>
        public string name;
     /// <summary>
        /// 装备类型
        /// </summary>
        public string equip_type;
     /// <summary>
        /// 物品类型
        /// </summary>
        public string equip_sub_type;
     /// <summary>
        /// 图标
        /// </summary>
        public string equip_icon;
     /// <summary>
        /// 品质描述
        /// </summary>
        public string qulity_desc;
     /// <summary>
        /// 品质
        /// </summary>
        public XorInt qulity_xor;
     /// <summary>
        /// 品质
        /// </summary>
        public int qulity{
            get{
                return qulity_xor.val;
            }
        }
     /// <summary>
        /// 星级
        /// </summary>
        public XorInt star_xor;
     /// <summary>
        /// 星级
        /// </summary>
        public int star{
            get{
                return star_xor.val;
            }
        }
     /// <summary>
        /// 物理伤害
        /// </summary>
        public XorInt phy_attack_xor;
     /// <summary>
        /// 物理伤害
        /// </summary>
        public int phy_attack{
            get{
                return phy_attack_xor.val;
            }
        }
     /// <summary>
        /// 法术提升
        /// </summary>
        public XorInt mag_attack_xor;
     /// <summary>
        /// 法术提升
        /// </summary>
        public int mag_attack{
            get{
                return mag_attack_xor.val;
            }
        }
     /// <summary>
        /// 攻击成长
        /// </summary>
        public XorDouble attack_lev_xor;
     /// <summary>
        /// 攻击成长
        /// </summary>
        public double attack_lev{
            get{
                return attack_lev_xor.val;
            }
        }
     /// <summary>
        /// 攻击星级成长
        /// </summary>
        public XorDouble attack_star_xor;
     /// <summary>
        /// 攻击星级成长
        /// </summary>
        public double attack_star{
            get{
                return attack_star_xor.val;
            }
        }
     /// <summary>
        /// 剑、刀、拳、枪、医系数提升
        /// </summary>
        public XorInt weapon_facor_xor;
     /// <summary>
        /// 剑、刀、拳、枪、医系数提升
        /// </summary>
        public int weapon_facor{
            get{
                return weapon_facor_xor.val;
            }
        }
     /// <summary>
        /// 攻击速度
        /// </summary>
        public XorInt attack_speed_xor;
     /// <summary>
        /// 攻击速度
        /// </summary>
        public int attack_speed{
            get{
                return attack_speed_xor.val;
            }
        }
     /// <summary>
        /// 物理防御
        /// </summary>
        public XorInt pyh_def_xor;
     /// <summary>
        /// 物理防御
        /// </summary>
        public int pyh_def{
            get{
                return pyh_def_xor.val;
            }
        }
     /// <summary>
        /// 法术防御
        /// </summary>
        public XorInt mag_def_xor;
     /// <summary>
        /// 法术防御
        /// </summary>
        public int mag_def{
            get{
                return mag_def_xor.val;
            }
        }
     /// <summary>
        /// 等级防御成长
        /// </summary>
        public XorDouble defence_lev_xor;
     /// <summary>
        /// 等级防御成长
        /// </summary>
        public double defence_lev{
            get{
                return defence_lev_xor.val;
            }
        }
     /// <summary>
        /// 星级防御成长
        /// </summary>
        public XorDouble defence_star_xor;
     /// <summary>
        /// 星级防御成长
        /// </summary>
        public double defence_star{
            get{
                return defence_star_xor.val;
            }
        }
     /// <summary>
        /// 生命上限
        /// </summary>
        public XorInt add_maxhp_xor;
     /// <summary>
        /// 生命上限
        /// </summary>
        public int add_maxhp{
            get{
                return add_maxhp_xor.val;
            }
        }
     /// <summary>
        /// 生命成长
        /// </summary>
        public XorDouble hp_lev_xor;
     /// <summary>
        /// 生命成长
        /// </summary>
        public double hp_lev{
            get{
                return hp_lev_xor.val;
            }
        }
     /// <summary>
        /// 生命星级成长
        /// </summary>
        public XorDouble hp_star_xor;
     /// <summary>
        /// 生命星级成长
        /// </summary>
        public double hp_star{
            get{
                return hp_star_xor.val;
            }
        }
     /// <summary>
        /// 法力上限
        /// </summary>
        public XorInt add_maxmp_xor;
     /// <summary>
        /// 法力上限
        /// </summary>
        public int add_maxmp{
            get{
                return add_maxmp_xor.val;
            }
        }
     /// <summary>
        /// 魔法成长
        /// </summary>
        public XorDouble mp_lev_xor;
     /// <summary>
        /// 魔法成长
        /// </summary>
        public double mp_lev{
            get{
                return mp_lev_xor.val;
            }
        }
     /// <summary>
        /// 魔法星级成长
        /// </summary>
        public XorDouble mp_star_xor;
     /// <summary>
        /// 魔法星级成长
        /// </summary>
        public double mp_star{
            get{
                return mp_star_xor.val;
            }
        }
     /// <summary>
        /// 移动速度
        /// </summary>
        public XorInt move_speed_xor;
     /// <summary>
        /// 移动速度
        /// </summary>
        public int move_speed{
            get{
                return move_speed_xor.val;
            }
        }
     /// <summary>
        /// 内力
        /// </summary>
        public XorInt neili_xor;
     /// <summary>
        /// 内力
        /// </summary>
        public int neili{
            get{
                return neili_xor.val;
            }
        }
     /// <summary>
        /// 筋骨
        /// </summary>
        public XorInt jinggu_xor;
     /// <summary>
        /// 筋骨
        /// </summary>
        public int jinggu{
            get{
                return jinggu_xor.val;
            }
        }
     /// <summary>
        /// 身法
        /// </summary>
        public XorInt shenfa_xor;
     /// <summary>
        /// 身法
        /// </summary>
        public int shenfa{
            get{
                return shenfa_xor.val;
            }
        }
     /// <summary>
        /// 商店购买价格
        /// </summary>
        public XorLong shop_cost_coin_xor;
     /// <summary>
        /// 商店购买价格
        /// </summary>
        public long shop_cost_coin{
            get{
                return shop_cost_coin_xor.val;
            }
        }
     /// <summary>
        /// 售卖价格
        /// </summary>
        public XorLong cost_coin_xor;
     /// <summary>
        /// 售卖价格
        /// </summary>
        public long cost_coin{
            get{
                return cost_coin_xor.val;
            }
        }
     /// <summary>
        /// 练气值
        /// </summary>
        public XorLong equip_val_xor;
     /// <summary>
        /// 练气值
        /// </summary>
        public long equip_val{
            get{
                return equip_val_xor.val;
            }
        }
     /// <summary>
        /// 打造消耗练气值
        /// </summary>
        public XorLong build_cost_equip_val_xor;
     /// <summary>
        /// 打造消耗练气值
        /// </summary>
        public long build_cost_equip_val{
            get{
                return build_cost_equip_val_xor.val;
            }
        }
     /// <summary>
        /// 主要来源
        /// </summary>
        public XorInt from_xor;
     /// <summary>
        /// 主要来源
        /// </summary>
        public int from{
            get{
                return from_xor.val;
            }
        }
     /// <summary>
        /// 能够插入物品数量
        /// </summary>
        public XorInt can_insert_good_num_xor;
     /// <summary>
        /// 能够插入物品数量
        /// </summary>
        public int can_insert_good_num{
            get{
                return can_insert_good_num_xor.val;
            }
        }
     /// <summary>
        /// 备注
        /// </summary>
        public string extra_fun;
     /// <summary>
        /// 出处
        /// </summary>
        public string drop;
     /// <summary>
        /// 套装类型
        /// </summary>
        public string suit_equip_type;
     /// <summary>
        /// 故事
        /// </summary>
        public string story;
     /// <summary>
        /// 剑、刀、拳、枪、医系数提升
        /// </summary>
        public XorInt weapon_facor_star_xor;
     /// <summary>
        /// 剑、刀、拳、枪、医系数提升
        /// </summary>
        public int weapon_facor_star{
            get{
                return weapon_facor_star_xor.val;
            }
        }
     /// <summary>
        /// 内力星级
        /// </summary>
        public XorInt neili_star_xor;
     /// <summary>
        /// 内力星级
        /// </summary>
        public int neili_star{
            get{
                return neili_star_xor.val;
            }
        }
     /// <summary>
        /// 筋骨星级
        /// </summary>
        public XorInt jinggu_star_xor;
     /// <summary>
        /// 筋骨星级
        /// </summary>
        public int jinggu_star{
            get{
                return jinggu_star_xor.val;
            }
        }
     /// <summary>
        /// 身法星级
        /// </summary>
        public XorInt shenfa_star_xor;
     /// <summary>
        /// 身法星级
        /// </summary>
        public int shenfa_star{
            get{
                return shenfa_star_xor.val;
            }
        }
     /// <summary>
        /// 吸血因子
        /// </summary>
        public XorDouble xixue_factor_xor;
     /// <summary>
        /// 吸血因子
        /// </summary>
        public double xixue_factor{
            get{
                return xixue_factor_xor.val;
            }
        }
     /// <summary>
        /// 命中
        /// </summary>
        public XorDouble hit_radio_xor;
     /// <summary>
        /// 命中
        /// </summary>
        public double hit_radio{
            get{
                return hit_radio_xor.val;
            }
        }
     /// <summary>
        /// 闪避
        /// </summary>
        public XorDouble miss_radio_xor;
     /// <summary>
        /// 闪避
        /// </summary>
        public double miss_radio{
            get{
                return miss_radio_xor.val;
            }
        }
     /// <summary>
        /// 穿透
        /// </summary>
        public XorDouble pofang_radio_xor;
     /// <summary>
        /// 穿透
        /// </summary>
        public double pofang_radio{
            get{
                return pofang_radio_xor.val;
            }
        }
     /// <summary>
        /// 暴击
        /// </summary>
        public XorDouble crit_radio_xor;
     /// <summary>
        /// 暴击
        /// </summary>
        public double crit_radio{
            get{
                return crit_radio_xor.val;
            }
        }
     /// <summary>
        /// 暴击伤害
        /// </summary>
        public XorDouble crit_dmg_percent_xor;
     /// <summary>
        /// 暴击伤害
        /// </summary>
        public double crit_dmg_percent{
            get{
                return crit_dmg_percent_xor.val;
            }
        }
     /// <summary>
        /// 眩晕抗性
        /// </summary>
        public XorDouble unxuanyun_xor;
     /// <summary>
        /// 眩晕抗性
        /// </summary>
        public double unxuanyun{
            get{
                return unxuanyun_xor.val;
            }
        }
     /// <summary>
        /// 禁锢抗性
        /// </summary>
        public XorDouble unjinggu_xor;
     /// <summary>
        /// 禁锢抗性
        /// </summary>
        public double unjinggu{
            get{
                return unjinggu_xor.val;
            }
        }
     /// <summary>
        /// 昏睡抗性
        /// </summary>
        public XorDouble unhunshui_xor;
     /// <summary>
        /// 昏睡抗性
        /// </summary>
        public double unhunshui{
            get{
                return unhunshui_xor.val;
            }
        }
     /// <summary>
        /// 封印抗性
        /// </summary>
        public XorDouble unfengyin_xor;
     /// <summary>
        /// 封印抗性
        /// </summary>
        public double unfengyin{
            get{
                return unfengyin_xor.val;
            }
        }
     /// <summary>
        /// 禁法抗性
        /// </summary>
        public XorDouble unjinfa_xor;
     /// <summary>
        /// 禁法抗性
        /// </summary>
        public double unjinfa{
            get{
                return unjinfa_xor.val;
            }
        }
     /// <summary>
        /// 魅惑抗性
        /// </summary>
        public XorDouble unmeihuo_xor;
     /// <summary>
        /// 魅惑抗性
        /// </summary>
        public double unmeihuo{
            get{
                return unmeihuo_xor.val;
            }
        }
     /// <summary>
        /// 虚弱抗性
        /// </summary>
        public XorDouble unxuruo_xor;
     /// <summary>
        /// 虚弱抗性
        /// </summary>
        public double unxuruo{
            get{
                return unxuruo_xor.val;
            }
        }
     /// <summary>
        /// 吸血因子
        /// </summary>
        public XorDouble xixue_factor_star_xor;
     /// <summary>
        /// 吸血因子
        /// </summary>
        public double xixue_factor_star{
            get{
                return xixue_factor_star_xor.val;
            }
        }
     /// <summary>
        /// 命中
        /// </summary>
        public XorDouble hit_radio_star_xor;
     /// <summary>
        /// 命中
        /// </summary>
        public double hit_radio_star{
            get{
                return hit_radio_star_xor.val;
            }
        }
     /// <summary>
        /// 闪避
        /// </summary>
        public XorDouble miss_radio_star_xor;
     /// <summary>
        /// 闪避
        /// </summary>
        public double miss_radio_star{
            get{
                return miss_radio_star_xor.val;
            }
        }
     /// <summary>
        /// 穿透
        /// </summary>
        public XorDouble pofang_radio_star_xor;
     /// <summary>
        /// 穿透
        /// </summary>
        public double pofang_radio_star{
            get{
                return pofang_radio_star_xor.val;
            }
        }
     /// <summary>
        /// 暴击
        /// </summary>
        public XorDouble crit_radio_star_xor;
     /// <summary>
        /// 暴击
        /// </summary>
        public double crit_radio_star{
            get{
                return crit_radio_star_xor.val;
            }
        }
     /// <summary>
        /// 暴击伤害
        /// </summary>
        public XorDouble crit_dmg_percent_star_xor;
     /// <summary>
        /// 暴击伤害
        /// </summary>
        public double crit_dmg_percent_star{
            get{
                return crit_dmg_percent_star_xor.val;
            }
        }
     /// <summary>
        /// 眩晕抗性
        /// </summary>
        public XorDouble unxuanyun_star_xor;
     /// <summary>
        /// 眩晕抗性
        /// </summary>
        public double unxuanyun_star{
            get{
                return unxuanyun_star_xor.val;
            }
        }
     /// <summary>
        /// 禁锢抗性
        /// </summary>
        public XorDouble unjinggu_star_xor;
     /// <summary>
        /// 禁锢抗性
        /// </summary>
        public double unjinggu_star{
            get{
                return unjinggu_star_xor.val;
            }
        }
     /// <summary>
        /// 昏睡抗性
        /// </summary>
        public XorDouble unhunshui_star_xor;
     /// <summary>
        /// 昏睡抗性
        /// </summary>
        public double unhunshui_star{
            get{
                return unhunshui_star_xor.val;
            }
        }
     /// <summary>
        /// 封印抗性
        /// </summary>
        public XorDouble unfengyin_star_xor;
     /// <summary>
        /// 封印抗性
        /// </summary>
        public double unfengyin_star{
            get{
                return unfengyin_star_xor.val;
            }
        }
     /// <summary>
        /// 禁法抗性
        /// </summary>
        public XorDouble unjinfa_star_xor;
     /// <summary>
        /// 禁法抗性
        /// </summary>
        public double unjinfa_star{
            get{
                return unjinfa_star_xor.val;
            }
        }
     /// <summary>
        /// 魅惑抗性
        /// </summary>
        public XorDouble unmeihuo_star_xor;
     /// <summary>
        /// 魅惑抗性
        /// </summary>
        public double unmeihuo_star{
            get{
                return unmeihuo_star_xor.val;
            }
        }
     /// <summary>
        /// 虚弱抗性
        /// </summary>
        public XorDouble unxuruo_star_xor;
     /// <summary>
        /// 虚弱抗性
        /// </summary>
        public double unxuruo_star{
            get{
                return unxuruo_star_xor.val;
            }
        }
     /// <summary>
        /// 来源获取
        /// </summary>
        public List<string> fromIds;
     /// <summary>
        /// 武器攻击属性类型
        /// </summary>
        public XorInt weaponAtkMask_xor;
     /// <summary>
        /// 武器攻击属性类型
        /// </summary>
        public int weaponAtkMask{
            get{
                return weaponAtkMask_xor.val;
            }
        }
     /// <summary>
        /// 五彩石镶嵌
        /// </summary>
        public XorInt can_insert_wucai_num_xor;
     /// <summary>
        /// 五彩石镶嵌
        /// </summary>
        public int can_insert_wucai_num{
            get{
                return can_insert_wucai_num_xor.val;
            }
        }
     /// <summary>
        /// 限制穿戴等级
        /// </summary>
        public XorInt limited_lev_xor;
     /// <summary>
        /// 限制穿戴等级
        /// </summary>
        public int limited_lev{
            get{
                return limited_lev_xor.val;
            }
        }
     /// <summary>
        /// 增伤
        /// </summary>
        public XorDouble dmg_add_per_xor;
     /// <summary>
        /// 增伤
        /// </summary>
        public double dmg_add_per{
            get{
                return dmg_add_per_xor.val;
            }
        }
     /// <summary>
        /// 减伤
        /// </summary>
        public XorDouble dmg_des_per_xor;
     /// <summary>
        /// 减伤
        /// </summary>
        public double dmg_des_per{
            get{
                return dmg_des_per_xor.val;
            }
        }
     /// <summary>
        /// 伤害反弹
        /// </summary>
        public XorDouble dmg_fantan_xor;
     /// <summary>
        /// 伤害反弹
        /// </summary>
        public double dmg_fantan{
            get{
                return dmg_fantan_xor.val;
            }
        }
     /// <summary>
        /// 抗爆率
        /// </summary>
        public XorDouble kang_crit_radio_xor;
     /// <summary>
        /// 抗爆率
        /// </summary>
        public double kang_crit_radio{
            get{
                return kang_crit_radio_xor.val;
            }
        }
     /// <summary>
        /// 抗爆伤害率
        /// </summary>
        public XorDouble kang_crit_dmg_radio_xor;
     /// <summary>
        /// 抗爆伤害率
        /// </summary>
        public double kang_crit_dmg_radio{
            get{
                return kang_crit_dmg_radio_xor.val;
            }
        }
     /// <summary>
        /// 治疗系数
        /// </summary>
        public XorDouble treat_hp_per_xor;
     /// <summary>
        /// 治疗系数
        /// </summary>
        public double treat_hp_per{
            get{
                return treat_hp_per_xor.val;
            }
        }
     /// <summary>
        /// 增伤
        /// </summary>
        public XorDouble dmg_add_per_star_xor;
     /// <summary>
        /// 增伤
        /// </summary>
        public double dmg_add_per_star{
            get{
                return dmg_add_per_star_xor.val;
            }
        }
     /// <summary>
        /// 减伤
        /// </summary>
        public XorDouble dmg_des_per_star_xor;
     /// <summary>
        /// 减伤
        /// </summary>
        public double dmg_des_per_star{
            get{
                return dmg_des_per_star_xor.val;
            }
        }
     /// <summary>
        /// 伤害反弹
        /// </summary>
        public XorDouble dmg_fantan_star_xor;
     /// <summary>
        /// 伤害反弹
        /// </summary>
        public double dmg_fantan_star{
            get{
                return dmg_fantan_star_xor.val;
            }
        }
     /// <summary>
        /// 抗爆率
        /// </summary>
        public XorDouble kang_crit_radio_star_xor;
     /// <summary>
        /// 抗爆率
        /// </summary>
        public double kang_crit_radio_star{
            get{
                return kang_crit_radio_star_xor.val;
            }
        }
     /// <summary>
        /// 抗爆伤害率
        /// </summary>
        public XorDouble kang_crit_dmg_radio_star_xor;
     /// <summary>
        /// 抗爆伤害率
        /// </summary>
        public double kang_crit_dmg_radio_star{
            get{
                return kang_crit_dmg_radio_star_xor.val;
            }
        }
     /// <summary>
        /// 治疗系数
        /// </summary>
        public XorDouble treat_hp_per_star_xor;
     /// <summary>
        /// 治疗系数
        /// </summary>
        public double treat_hp_per_star{
            get{
                return treat_hp_per_star_xor.val;
            }
        }
     /// <summary>
        /// 属性描述
        /// </summary>
        public string equip_attr_desc;
     /// <summary>
        /// 反弹系数
        /// </summary>
        public XorDouble fantan_factor_xor;
     /// <summary>
        /// 反弹系数
        /// </summary>
        public double fantan_factor{
            get{
                return fantan_factor_xor.val;
            }
        }
     /// <summary>
        /// 星级
        /// </summary>
        public XorInt init_star_xor;
     /// <summary>
        /// 星级
        /// </summary>
        public int init_star{
            get{
                return init_star_xor.val;
            }
        }
     /// <summary>
        /// 双刀流支持
        /// </summary>
        public XorInt shuangdaoliu_xor;
     /// <summary>
        /// 双刀流支持
        /// </summary>
        public int shuangdaoliu{
            get{
                return shuangdaoliu_xor.val;
            }
        }
     /// <summary>
        /// 双手持支持
        /// </summary>
        public XorInt shuangshouchi_xor;
     /// <summary>
        /// 双手持支持
        /// </summary>
        public int shuangshouchi{
            get{
                return shuangshouchi_xor.val;
            }
        }
     /// <summary>
        /// 每回合行动次数增加
        /// </summary>
        public XorInt action_round_xor;
     /// <summary>
        /// 每回合行动次数增加
        /// </summary>
        public int action_round{
            get{
                return action_round_xor.val;
            }
        }
     /// <summary>
        /// 双手持能力
        /// </summary>
        public string shuangshouchi_ability;
     /// <summary>
        /// 特殊定位能力
        /// </summary>
        public List<string> equip_ability;
     /// <summary>
        /// 限定能力
        /// </summary>
        public string limited_hero_ability;
     /// <summary>
        /// 限定百分比能力
        /// </summary>
        public string limited_hero_ability_per;
     /// <summary>
        /// 限定英雄支持的功能
        /// </summary>
        public List<string> limited_heros;

    public virtual Model Clone()
    {
        Model mm = this.MemberwiseClone() as Model;
        return mm;
    }
}

    //
    private Dictionary<string, Model> m_dict;

    // Get The Dictionary
    public Dictionary<string, Model> Dict
    {
        get
        {
            return m_dict;
        }
    }

    private List<Model> m_list;
	public List<Model> getList()
	{
		return m_list;
	}

    // Get The Model By Key
    public Model GetModel(string id)
    {
        if (m_dict == null)
        {
            Debug.LogError("DictEquipEquip m_dict Is Null");
            return null;
        }
        else
        {
            if (m_dict.ContainsKey(id))
            {
                return m_dict[id];
            }
            else
            {
                Debug.LogError ("error id:"+id);
                return null;
            }
        }
    }

    private DictString_LoadFinishedCallBack m_loadFinishedCallBack;
    // load the json file
    public void Load(string path,DictString_LoadFinishedCallBack callBack)
    {
        m_loadFinishedCallBack = callBack;

        //
        string filePath = path;
        if(!filePath.EndsWith("/"))
        {
            filePath += "/";
        }

        filePath += GetFileName();
        DictFileReader fileReader = new DictFileReader(filePath, DoParse);
    }

    // get file name
    public string GetFileName()
    {
        return "dict_equip_equip.txt";
    }

    // parse the json data
    private void DoParse(DictFileReader fileReader)
    {
        m_dict = new Dictionary<string,Model>();
        m_list = new List<Model>();
        //
        do
        {
            string[] str = fileReader.ReadRow();
            if (str == null || str.Length == 0)
            {
                break;
            }

            //
            Model model = new Model();
            model.id = DictTypeConvert.ParseString(str[fileReader.typeName2Index["id"]]);
            model.name = DictTypeConvert.ParseString(str[fileReader.typeName2Index["name"]]);
            model.equip_type = DictTypeConvert.ParseString(str[fileReader.typeName2Index["equip_type"]]);
            model.equip_sub_type = DictTypeConvert.ParseString(str[fileReader.typeName2Index["equip_sub_type"]]);
            model.equip_icon = DictTypeConvert.ParseString(str[fileReader.typeName2Index["equip_icon"]]);
            model.qulity_desc = DictTypeConvert.ParseString(str[fileReader.typeName2Index["qulity_desc"]]);
            model.qulity_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["qulity"]]),fileReader.randomUtil);
            model.star_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["star"]]),fileReader.randomUtil);
            model.phy_attack_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["phy_attack"]]),fileReader.randomUtil);
            model.mag_attack_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["mag_attack"]]),fileReader.randomUtil);
            model.attack_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["attack_lev"]]),fileReader.randomUtil);
            model.attack_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["attack_star"]]),fileReader.randomUtil);
            model.weapon_facor_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["weapon_facor"]]),fileReader.randomUtil);
            model.attack_speed_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["attack_speed"]]),fileReader.randomUtil);
            model.pyh_def_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["pyh_def"]]),fileReader.randomUtil);
            model.mag_def_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["mag_def"]]),fileReader.randomUtil);
            model.defence_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["defence_lev"]]),fileReader.randomUtil);
            model.defence_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["defence_star"]]),fileReader.randomUtil);
            model.add_maxhp_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["add_maxhp"]]),fileReader.randomUtil);
            model.hp_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["hp_lev"]]),fileReader.randomUtil);
            model.hp_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["hp_star"]]),fileReader.randomUtil);
            model.add_maxmp_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["add_maxmp"]]),fileReader.randomUtil);
            model.mp_lev_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["mp_lev"]]),fileReader.randomUtil);
            model.mp_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["mp_star"]]),fileReader.randomUtil);
            model.move_speed_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["move_speed"]]),fileReader.randomUtil);
            model.neili_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["neili"]]),fileReader.randomUtil);
            model.jinggu_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["jinggu"]]),fileReader.randomUtil);
            model.shenfa_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["shenfa"]]),fileReader.randomUtil);
            model.shop_cost_coin_xor = new XorLong(DictTypeConvert.ParseLong(str[fileReader.typeName2Index["shop_cost_coin"]]),fileReader.randomUtil);
            model.cost_coin_xor = new XorLong(DictTypeConvert.ParseLong(str[fileReader.typeName2Index["cost_coin"]]),fileReader.randomUtil);
            model.equip_val_xor = new XorLong(DictTypeConvert.ParseLong(str[fileReader.typeName2Index["equip_val"]]),fileReader.randomUtil);
            model.build_cost_equip_val_xor = new XorLong(DictTypeConvert.ParseLong(str[fileReader.typeName2Index["build_cost_equip_val"]]),fileReader.randomUtil);
            model.from_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["from"]]),fileReader.randomUtil);
            model.can_insert_good_num_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["can_insert_good_num"]]),fileReader.randomUtil);
            model.extra_fun = DictTypeConvert.ParseString(str[fileReader.typeName2Index["extra_fun"]]);
            model.drop = DictTypeConvert.ParseString(str[fileReader.typeName2Index["drop"]]);
            model.suit_equip_type = DictTypeConvert.ParseString(str[fileReader.typeName2Index["suit_equip_type"]]);
            model.story = DictTypeConvert.ParseString(str[fileReader.typeName2Index["story"]]);
            model.weapon_facor_star_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["weapon_facor_star"]]),fileReader.randomUtil);
            model.neili_star_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["neili_star"]]),fileReader.randomUtil);
            model.jinggu_star_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["jinggu_star"]]),fileReader.randomUtil);
            model.shenfa_star_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["shenfa_star"]]),fileReader.randomUtil);
            model.xixue_factor_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["xixue_factor"]]),fileReader.randomUtil);
            model.hit_radio_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["hit_radio"]]),fileReader.randomUtil);
            model.miss_radio_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["miss_radio"]]),fileReader.randomUtil);
            model.pofang_radio_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["pofang_radio"]]),fileReader.randomUtil);
            model.crit_radio_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["crit_radio"]]),fileReader.randomUtil);
            model.crit_dmg_percent_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["crit_dmg_percent"]]),fileReader.randomUtil);
            model.unxuanyun_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unxuanyun"]]),fileReader.randomUtil);
            model.unjinggu_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unjinggu"]]),fileReader.randomUtil);
            model.unhunshui_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unhunshui"]]),fileReader.randomUtil);
            model.unfengyin_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unfengyin"]]),fileReader.randomUtil);
            model.unjinfa_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unjinfa"]]),fileReader.randomUtil);
            model.unmeihuo_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unmeihuo"]]),fileReader.randomUtil);
            model.unxuruo_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unxuruo"]]),fileReader.randomUtil);
            model.xixue_factor_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["xixue_factor_star"]]),fileReader.randomUtil);
            model.hit_radio_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["hit_radio_star"]]),fileReader.randomUtil);
            model.miss_radio_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["miss_radio_star"]]),fileReader.randomUtil);
            model.pofang_radio_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["pofang_radio_star"]]),fileReader.randomUtil);
            model.crit_radio_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["crit_radio_star"]]),fileReader.randomUtil);
            model.crit_dmg_percent_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["crit_dmg_percent_star"]]),fileReader.randomUtil);
            model.unxuanyun_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unxuanyun_star"]]),fileReader.randomUtil);
            model.unjinggu_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unjinggu_star"]]),fileReader.randomUtil);
            model.unhunshui_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unhunshui_star"]]),fileReader.randomUtil);
            model.unfengyin_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unfengyin_star"]]),fileReader.randomUtil);
            model.unjinfa_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unjinfa_star"]]),fileReader.randomUtil);
            model.unmeihuo_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unmeihuo_star"]]),fileReader.randomUtil);
            model.unxuruo_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["unxuruo_star"]]),fileReader.randomUtil);
            model.fromIds = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["fromIds"]]);
            model.weaponAtkMask_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["weaponAtkMask"]]),fileReader.randomUtil);
            model.can_insert_wucai_num_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["can_insert_wucai_num"]]),fileReader.randomUtil);
            model.limited_lev_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["limited_lev"]]),fileReader.randomUtil);
            model.dmg_add_per_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["dmg_add_per"]]),fileReader.randomUtil);
            model.dmg_des_per_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["dmg_des_per"]]),fileReader.randomUtil);
            model.dmg_fantan_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["dmg_fantan"]]),fileReader.randomUtil);
            model.kang_crit_radio_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["kang_crit_radio"]]),fileReader.randomUtil);
            model.kang_crit_dmg_radio_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["kang_crit_dmg_radio"]]),fileReader.randomUtil);
            model.treat_hp_per_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["treat_hp_per"]]),fileReader.randomUtil);
            model.dmg_add_per_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["dmg_add_per_star"]]),fileReader.randomUtil);
            model.dmg_des_per_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["dmg_des_per_star"]]),fileReader.randomUtil);
            model.dmg_fantan_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["dmg_fantan_star"]]),fileReader.randomUtil);
            model.kang_crit_radio_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["kang_crit_radio_star"]]),fileReader.randomUtil);
            model.kang_crit_dmg_radio_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["kang_crit_dmg_radio_star"]]),fileReader.randomUtil);
            model.treat_hp_per_star_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["treat_hp_per_star"]]),fileReader.randomUtil);
            model.equip_attr_desc = DictTypeConvert.ParseString(str[fileReader.typeName2Index["equip_attr_desc"]]);
            model.fantan_factor_xor = new XorDouble(DictTypeConvert.ParseDouble(str[fileReader.typeName2Index["fantan_factor"]]),fileReader.randomUtil);
            model.init_star_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["init_star"]]),fileReader.randomUtil);
            model.shuangdaoliu_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["shuangdaoliu"]]),fileReader.randomUtil);
            model.shuangshouchi_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["shuangshouchi"]]),fileReader.randomUtil);
            model.action_round_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["action_round"]]),fileReader.randomUtil);
            model.shuangshouchi_ability = DictTypeConvert.ParseString(str[fileReader.typeName2Index["shuangshouchi_ability"]]);
            model.equip_ability = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["equip_ability"]]);
            model.limited_hero_ability = DictTypeConvert.ParseString(str[fileReader.typeName2Index["limited_hero_ability"]]);
            model.limited_hero_ability_per = DictTypeConvert.ParseString(str[fileReader.typeName2Index["limited_hero_ability_per"]]);
            model.limited_heros = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["limited_heros"]]);

            if (m_dict.ContainsKey(model.id) == false)
            {
                m_dict.Add(model.id, model);
                m_list.Add(model);
            }
            else
            {
                Debug.LogError("DictEquipEquip Parse:Same Key = " + model.id);
            }

        } while (true);

        if(m_loadFinishedCallBack != null)
        {
            m_loadFinishedCallBack(GetFileName());
        }
    }

}
