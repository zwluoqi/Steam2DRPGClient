//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using Xor;

public partial class DictPlayerDongfuCanwu
{

    // data model
    // [System.Serializable]
    public class Model
    {
     /// <summary>
        /// ID
        /// </summary>
        public string id;
     /// <summary>
        /// 加ID
        /// </summary>
        public string new_id;
     /// <summary>
        /// 参悟类别
        /// </summary>
        public string dongfu_type;
     /// <summary>
        /// 书籍名称
        /// </summary>
        public string name;
     /// <summary>
        /// 排序
        /// </summary>
        public XorInt order_xor;
     /// <summary>
        /// 排序
        /// </summary>
        public int order{
            get{
                return order_xor.val;
            }
        }
     /// <summary>
        /// 品质
        /// </summary>
        public XorInt qulity_xor;
     /// <summary>
        /// 品质
        /// </summary>
        public int qulity{
            get{
                return qulity_xor.val;
            }
        }
     /// <summary>
        /// 参悟描述
        /// </summary>
        public string canwu_detail;
     /// <summary>
        /// 产出描述
        /// </summary>
        public string produce_detail;
     /// <summary>
        /// 产出效率（单位/年）
        /// </summary>
        public XorInt workpiece_ratio_xor;
     /// <summary>
        /// 产出效率（单位/年）
        /// </summary>
        public int workpiece_ratio{
            get{
                return workpiece_ratio_xor.val;
            }
        }
     /// <summary>
        /// 产出classId
        /// </summary>
        public string classId;
     /// <summary>
        /// 产出propId
        /// </summary>
        public string porpId;
     /// <summary>
        /// 产出objId
        /// </summary>
        public string objId;
     /// <summary>
        /// 产出Num
        /// </summary>
        public XorInt num_xor;
     /// <summary>
        /// 产出Num
        /// </summary>
        public int num{
            get{
                return num_xor.val;
            }
        }
     /// <summary>
        /// 开启消耗修为
        /// </summary>
        public XorInt cost_xiuwei_val_xor;
     /// <summary>
        /// 开启消耗修为
        /// </summary>
        public int cost_xiuwei_val{
            get{
                return cost_xiuwei_val_xor.val;
            }
        }
     /// <summary>
        /// 参悟花费游戏天数
        /// </summary>
        public XorInt canwu_cost_days_xor;
     /// <summary>
        /// 参悟花费游戏天数
        /// </summary>
        public int canwu_cost_days{
            get{
                return canwu_cost_days_xor.val;
            }
        }
     /// <summary>
        /// 参悟条件task
        /// </summary>
        public List<string> canwu_condition_tasks;
     /// <summary>
        /// 参悟消耗资源task
        /// </summary>
        public List<string> canwu_custom_tasks;
     /// <summary>
        /// 参悟需要书籍
        /// </summary>
        public string canwu_need_goodId;
     /// <summary>
        /// 休闲文字
        /// </summary>
        public string word;
     /// <summary>
        /// 激活技能
        /// </summary>
        public string skill_id;

    public virtual Model Clone()
    {
        Model mm = this.MemberwiseClone() as Model;
        return mm;
    }
}

    //
    private Dictionary<string, Model> m_dict;

    // Get The Dictionary
    public Dictionary<string, Model> Dict
    {
        get
        {
            return m_dict;
        }
    }

    private List<Model> m_list;
	public List<Model> getList()
	{
		return m_list;
	}

    // Get The Model By Key
    public Model GetModel(string id)
    {
        if (m_dict == null)
        {
            Debug.LogError("DictPlayerDongfuCanwu m_dict Is Null");
            return null;
        }
        else
        {
            if (m_dict.ContainsKey(id))
            {
                return m_dict[id];
            }
            else
            {
                Debug.LogError ("error id:"+id);
                return null;
            }
        }
    }

    private DictString_LoadFinishedCallBack m_loadFinishedCallBack;
    // load the json file
    public void Load(string path,DictString_LoadFinishedCallBack callBack)
    {
        m_loadFinishedCallBack = callBack;

        //
        string filePath = path;
        if(!filePath.EndsWith("/"))
        {
            filePath += "/";
        }

        filePath += GetFileName();
        DictFileReader fileReader = new DictFileReader(filePath, DoParse);
    }

    // get file name
    public string GetFileName()
    {
        return "dict_player_dongfu_canwu.txt";
    }

    // parse the json data
    private void DoParse(DictFileReader fileReader)
    {
        m_dict = new Dictionary<string,Model>();
        m_list = new List<Model>();
        //
        do
        {
            string[] str = fileReader.ReadRow();
            if (str == null || str.Length == 0)
            {
                break;
            }

            //
            Model model = new Model();
            model.id = DictTypeConvert.ParseString(str[fileReader.typeName2Index["id"]]);
            model.new_id = DictTypeConvert.ParseString(str[fileReader.typeName2Index["new_id"]]);
            model.dongfu_type = DictTypeConvert.ParseString(str[fileReader.typeName2Index["dongfu_type"]]);
            model.name = DictTypeConvert.ParseString(str[fileReader.typeName2Index["name"]]);
            model.order_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["order"]]),fileReader.randomUtil);
            model.qulity_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["qulity"]]),fileReader.randomUtil);
            model.canwu_detail = DictTypeConvert.ParseString(str[fileReader.typeName2Index["canwu_detail"]]);
            model.produce_detail = DictTypeConvert.ParseString(str[fileReader.typeName2Index["produce_detail"]]);
            model.workpiece_ratio_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["workpiece_ratio"]]),fileReader.randomUtil);
            model.classId = DictTypeConvert.ParseString(str[fileReader.typeName2Index["classId"]]);
            model.porpId = DictTypeConvert.ParseString(str[fileReader.typeName2Index["porpId"]]);
            model.objId = DictTypeConvert.ParseString(str[fileReader.typeName2Index["objId"]]);
            model.num_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["num"]]),fileReader.randomUtil);
            model.cost_xiuwei_val_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["cost_xiuwei_val"]]),fileReader.randomUtil);
            model.canwu_cost_days_xor = new XorInt( DictTypeConvert.ParseInt(str[fileReader.typeName2Index["canwu_cost_days"]]),fileReader.randomUtil);
            model.canwu_condition_tasks = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["canwu_condition_tasks"]]);
            model.canwu_custom_tasks = DictTypeConvert.ParseArrayString(str[fileReader.typeName2Index["canwu_custom_tasks"]]);
            model.canwu_need_goodId = DictTypeConvert.ParseString(str[fileReader.typeName2Index["canwu_need_goodId"]]);
            model.word = DictTypeConvert.ParseString(str[fileReader.typeName2Index["word"]]);
            model.skill_id = DictTypeConvert.ParseString(str[fileReader.typeName2Index["skill_id"]]);

            if (m_dict.ContainsKey(model.id) == false)
            {
                m_dict.Add(model.id, model);
                m_list.Add(model);
            }
            else
            {
                Debug.LogError("DictPlayerDongfuCanwu Parse:Same Key = " + model.id);
            }

        } while (true);

        if(m_loadFinishedCallBack != null)
        {
            m_loadFinishedCallBack(GetFileName());
        }
    }

}
